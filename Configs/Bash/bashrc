#!/bin/bash
#
# Main configuration for shell
#
# vim: set ft=sh

# If not running interactively, don't do anything
if [ -z "$PS1" ]; then
  return
fi

# Append to the history file, don't overwrite it
shopt -s histappend

# Check the window size after each command and, if necessary,
# Update the values of LINES and COLUMNS.
shopt -s checkwinsize

# If set, the pattern "**" used in a pathname expansion context will
# Match all files and zero or more directories and subdirectories.
shopt -s globstar

# For setting history length see HISTSIZE and HISTFILESIZE
HISTSIZE=1000
HISTFILESIZE=2000

# Don't put duplicate lines or lines starting with space in the history.
HISTCONTROL=ignoreboth

# Make less more friendly for non-text input files
if [ -x /usr/bin/lesspipe ]; then
  eval "$(SHELL=/bin/sh lesspipe)"
fi

# Set variable identifying the chroot you work in (used in the prompt below)
if [ -z "$debian_chroot" ] && [ -r /etc/debian_chroot ]; then
    debian_chroot=$(cat /etc/debian_chroot)
fi

# Source a bash script (file) if it exists
# Usage: call f1 f2 ... fn
#
# TODO: add wildcard support
call()
{
    for ((j = 1 ; j <= $# ; ++j))
    do
        if [ -f "${!j}" ]; then
            source ${!j};
        fi
    done
}

# Author: Ole J
# Date: 23.03.2008
# License: Whatever
#
# Wraps a completion function.
# make-completion-wrapper <actual completion function> <name of new func.>
#                         <command name> <list supplied arguments>
# Commands:
# 	alias agi='apt-get install'
# 	make-completion-wrapper _apt_get _apt_get_install apt-get install
#
# This defines a function called _apt_get_install (that's $2) that will complete
# the 'agi' alias. (complete -F _apt_get_install agi)
#
make-completion-wrapper ()
{
	local function_name="$2"
	local arg_count=$(($#-3))
	local comp_function_name="$1"
	shift 2
	local function="
function $function_name {
	((COMP_CWORD+=$arg_count))
	COMP_WORDS=( "$@" \${COMP_WORDS[@]:1} )
	"$comp_function_name"
	return 0
}"
	eval "$function"
}

# Environment variables
export BASHRTP="$HOME/.bash"
export PERL_LOCAL_LIB_ROOT="$HOME/perl5";
export PERL_MB_OPT="--install_base $HOME/perl5";
export PERL_MM_OPT="INSTALL_BASE=$HOME/perl5";
export PERL5LIB="$HOME/perl5/lib/perl5/x86_64-linux-gnu-thread-multi:$HOME/perl5/lib/perl5";
export PATH="$HOME/perl5/bin:$PATH";

# Global scripts
call /etc/bashrc /etc/bash_completion

# Custom scripts
call $BASHRTP/bash_profile $BASHRTP/bash_colors $BASHRTP/bash_aliases

# Do an `mkdir` immediately followed by a `cd`
# Usage: same as `mkdir`
mkcd()
{
    dir="$*";
    mkdir -p "$dir" && cd "$dir";
}

