"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Maintainer: 
"       Jean-Marie Comets
"
" Version: 
"       1.1 - 27/08/2012 17:29
"
" Sections:
"    -General
"    -VIM user interface
"    -Files and backups
"    -Text, tab and indent related
"    -Plugin settings
"    -Colors and Fonts
"    -Moving around, tabs and buffers
"    -Status line
"    -Editing mappings
"    -Spell checking
"    -Various key remaps
"    -Misc
"    -Helper functions
"    -Filetype settings
"    -Plugin customization
"
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => General
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Sets how many lines of history VIM has to remember
set history=700

" Set to auto read when a file is changed from the outside
set autoread

" Set mapleader (shortcut key) to ","
let mapleader = ","
let g:mapleader = ","

" Fast saving
nmap <leader>w :w!<cr>
imap <c-s> <c-o>:w!<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => VIM user interface
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Set 7 lines to the cursor - when moving vertically using j / k
set so=7

" Turn on the WiLd menu
set wildmenu

" Ignore compiled files and backups
set wildignore=*.o,*~,*.pyc,*.gch

" Compatible options
set cpoptions+=$

" Show line numbers
set number

" Always show current position
set ruler

" Height of the command bar
set cmdheight=2

" A buffer becomes hidden when it is abandoned
set hid

" Configure backspace so it acts as it should act
set backspace=eol,start,indent
set whichwrap+=<,>,h,l

" Ignore case when searching
set ignorecase

" When searching try to be smart about cases 
set smartcase

" Highlight search results
set hlsearch

" Makes search act like search in modern browsers
set incsearch

" Don't redraw while executing macros (good performance config)
set lazyredraw

" For regular expressions turn magic on
set magic

" Show matching brackets when text indicator is over them
set showmatch

" Fold settings
set fdm=syntax

" Max number of fold levels
set foldnestmax=10

" Folding everything
set nofoldenable

" Again, folding parent levels
set foldlevel=1

" How many tenths of a second to blink when matching brackets
set mat=2

" No annoying sound on errors
set noerrorbells
set novisualbell
set t_vb=
set tm=500

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Files, backups and undo
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Turn backup off, since most stuff is in SVN, git et.c anyway...
set nobackup
set nowb
set noswapfile


"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Text, tab and indent related
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Use spaces instead of tabs
set et

" Be smart when using tabs ;)
set smarttab

" 1 tab == 4 spaces
set shiftwidth=4
set tabstop=4

" Linebreak on 500 characters
set lbr
set tw=500

" Virtual edit (awesome)
set ve=all

" Auto indent
set ai

" Smart indent 
set si

" Wrap lines
set wrap

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable filetype plugins
filetype plugin indent on

" Start Pathogen plugin to load bundle
call pathogen#infect()
call pathogen#helptags()

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Colors and Fonts
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Enable syntax highlighting
syntax enable

" Colorschemes
"colorscheme solarized
colorscheme mustang

" Dark backgrounds are better
set background=dark

" Editing font
set gfn=Consolas\ 12

" Set extra options when running in GUI mode
if has("gui_running")
    set guioptions-=T
    set guioptions+=e
    set t_Co=256
    set guitablabel=%M\ %t
endif

" Set utf8 as standard encoding and en_US as the standard language
set encoding=utf8

" Use Unix as the standard file type
set ffs=unix,dos,mac

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Moving around, tabs, windows and buffers
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Treat long lines as break lines (useful when moving around in them)
nnoremap j gj
nnoremap k gk

" Map <Spaceto / (search) and Ctrl-<Spaceto ? (backwards search)
map <space> /
map <c-space> ?

" Disable highlight when <leader><cr> is pressed
map <silent> <leader><cr> :noh<cr>

" Smart way to move between windows (could be removed)
map <C-j> <C-W>j
map <C-k> <C-W>k
map <C-h> <C-W>h
map <C-l> <C-W>l

" Close the current buffer
map <leader>bd :Bclose<cr>

" Close all the buffers
map <leader>ba :1,1000 bd!<cr>

" Useful mappings for managing tabs
map <leader>tn :tabnew<cr>
map <leader>to :tabonly<cr>
map <leader>tc :tabclose<cr>

" Opens a new tab with the current buffer's path
" Super useful when editing files in the same directory
map <leader>te :tabedit <c-r>=expand("%:p:h")<cr>/

" Switch CWD to the directory of the open buffer
map <leader>cd :cd %:p:h<cr>:pwd<cr>

" Specify the behavior when switching between buffers 
try
    set switchbuf=useopen,usetab,newtab
    set stal=2
catch
endtry

" Return to last edit position when opening files (You want this!)
if has("autocmd")
    au BufReadPost *
                \ if line("'\"") > 0 && line("'\"") <= line("$") |
                \   exe "normal! g`\"" |
                \ endif
endif

" Remember info about open buffers on close
set viminfo^=%

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Status line
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Always show the status line
set laststatus=2

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Editing mappings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Move a line of text using ALT+[jk]
nmap <M-j> mz:m+<cr>`z
nmap <M-k> mz:m-2<cr>`z
vmap <M-j> :m'>+<cr>`<my`>mzgv`yo`z
vmap <M-k> :m'<-2<cr>`>my`<mzgv`yo`z

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Spell checking
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Pressing ,ss will toggle and untoggle spell checking
map <leader>ss :setlocal spell!<cr>

" Shortcuts using <leader>
map <leader>sn ]s
map <leader>sp [s
map <leader>sa zg
map <leader>s? z=

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Various key remaps
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Remap VIM 0 to first non-blank character
map 0 ^

" TODO
" Exchange "`" and "'"
nnoremap ' `
nnoremap ` '

" Map ";" to ":" (avoid typos)
nnoremap ; :

" Map "²" to "~" (quicker), and don't go forward one character
nmap ² ~h

" Visual block indenting: keep selection after indenting
vmap > >gv
vmap < <gv

" Quick macro: record = qq, play = Q
nnoremap Q @q

" Disable arrow keys (comment out when better at Vim ^^)
nnoremap <up> <nop>
nnoremap <down> <nop>
nnoremap <left> <nop>
nnoremap <right> <nop>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Misc
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Debug messages
"set debug=

" Remove the Windows ^M - when the encodings get messed up
noremap <Leader>m mmHmt:%s/<C-V><cr>//ge<cr>'tzt'm

" Close current file
map <leader>q :q<cr>

" Edit / Source configuration
map <leader>co :e $MYVIMRC<cr>
map <leader>so :so $MYVIMRC<cr>

" Toggle paste mode on and off
map <leader>pp :setlocal paste!<cr>

" Quick make command
map <F8> :make<cr>

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Helper functions
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Don't close window, when deleting a buffer
command! Bclose call <SID>BufcloseCloseIt()
function! <SID>BufcloseCloseIt()
    let l:currentBufNum = bufnr("%")
    let l:alternateBufNum = bufnr("#")

    if buflisted(l:alternateBufNum)
        buffer #
    else
        bnext
    endif

    if bufnr("%") == l:currentBufNum
        new
    endif

    if buflisted(l:currentBufNum)
        execute("bdelete! ".l:currentBufNum)
    endif
endfunction

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => FileType settings
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" Delete trailing white space on save
func! DeleteTrailingWS()
    exe "normal mz"
    %s/\s\+$//ge
    exe "normal `z"
endfunc

if has("autocmd")
    " Makefile
    au FileType make setl noexpandtab

    " Python
    au FileType python nmap <F5> :!python %<cr>
    au BufWrite *.py :call DeleteTrailingWS()

    " CoffeeScript
    au BufWrite *.coffee :call DeleteTrailingWS()

    " JSON / JavaScript
    " Set unless you have json.vim syntax plugin.
    "au BufNewFile,BufRead *.json set ft=javascript
    au BufNewFile,BufRead *.json set ft=json

    " Pascal
    au BufNewFile,BufRead *.pas,*.PAS setl ft=pascal

    " Delphi project file
    au BufNewFile,BufRead *.dpr,*.DPR setl ft=delphi

    " Delphi form file
    au BufNewFile,BufRead *.dfm,*.DFM setl ft=delphi
    au BufNewFile,BufRead *.xfm,*.XFM setl ft=delphi

    " Delphi package file
    au BufNewFile,BufRead *.dpk,*.DPK setl ft=delphi

    " Delphi .DOF file = INI file for MSDOS
    au BufNewFile,BufRead *.dof,*.DOF setl ft=dosini
    au BufNewFile,BufRead *.kof,*.KOF setl ft=dosini
    au BufNewFile,BufRead *.dsk,*.DSK setl ft=dosini
    au BufNewFile,BufRead *.desk,*.DESK setl ft=dosini
    au BufNewFile,BufRead *.dti,*.DTI setl ft=dosini
endif

"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" => Plugin customization
"""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""""
" NerdComment
nmap <leader>cc V:call NERDComment(0, "toggle")<cr>

" TagList
let Tlist_Enable_Fold_Column = 0
let Tlist_Compact_Format = 1
let Tlist_File_Fold_Auto_Close = 0
let Tlist_GainFocus_On_ToggleOpen = 1
let Tlist_Use_Right_Window = 1
nmap <F4> :TlistToggle<cr>
imap <F4> <C-o>:TlistToggle<cr>

" NerdTree
map <F3> :NERDTreeToggle<cr>
imap <F3> <C-o>:NERDTreeToggle<cr>
