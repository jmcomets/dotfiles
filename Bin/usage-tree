#!/usr/bin/env bash

set -eo pipefail

usage() {
    echo "help: usage-tree <directory> [<minimum>]" 1>&2
}

tree() {
    local directory="$1"
    local min="$2"
    du -h --max-depth=1 "$directory" \
        | while read -r line; do
            local size=`echo -e $line | awk '{printf $1}' | from_human_readable`
            if [ -n "$min" ] && [ "$size" -le "$min" ]; then
                continue
            fi

            local dir=`echo -e $line | cut -f1 -d' ' --complement`
            if [ "$dir" == "$directory" ]; then
                continue
            fi

            if [ -d "$dir" ]; then
                echo "$line"
                tree "$dir" "$min"
            fi
        done
}

main() {
    local directory="$1"
    if [ -z "$directory" ]; then
        usage
        exit 1
    fi

    # optional parameter
    local min="$2"
    if [ -z "$min" ]; then
        min=`echo -e 100M | from_human_readable`
    elif echo -e "$min" | grep -Eq "[0-9]+[GMK]" 2> /dev/null; then
        min=`echo -e "$min" | from_human_readable`
    elif ! echo -e "$min" | grep -Eq "\-?[0-9]+" 2> /dev/null; then
        echo "expected an integer for <minimum>, got \"$min\"" 1>&2
        echo 1>&2
        usage
        exit 1
    fi

    tree "$directory" "$min"
}

from_human_readable() {
    awk '/M$/{printf "%i",($0+0)*1024}/G$/{printf "%i",($0+0)*1024*1024}/K$/{printf "%i",$0+0}' $*
}

main $*

# vim: ft=sh
